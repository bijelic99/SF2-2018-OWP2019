<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" id="WebApp_ID" version="2.5">
  <display-name>SF2-2018-OWP2019</display-name>
  <filter>
    <filter-name>CORS</filter-name>
    <filter-class>com.thetransactioncompany.cors.CORSFilter</filter-class>
    <init-param>
      <param-name>cors.supportedMethods</param-name>
      <param-value>GET, POST, HEAD, PUT, DELETE, OPTIONS</param-value>
    </init-param>
    <init-param>
      <param-name>cors.allowOrigin</param-name>
      <param-value>http://localhost:8080, http://192.168.1.250:8080, http://localhost:8081, http://192.168.1.250:8081</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>CORS</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
  </welcome-file-list>
  <filter>
    <display-name>LogOutWhenNeededFilter</display-name>
    <filter-name>LogOutWhenNeededFilter</filter-name>
    <filter-class>controller.login.LogOutWhenNeededFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>LogOutWhenNeededFilter</filter-name>
    <url-pattern>/api/*</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>CreateSessionIfNotAvailableFilter</display-name>
    <filter-name>CreateSessionIfNotAvailableFilter</filter-name>
    <filter-class>controller.login.CreateSessionIfNotAvailableFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>CreateSessionIfNotAvailableFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AuthenticationRequieredOnGetAction</display-name>
    <filter-name>AuthenticationRequieredOnGetAction</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.AuthenticationRequieredOnGetAction</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AuthenticationRequieredOnGetAction</filter-name>
    <url-pattern>/api/Karta</url-pattern>
    <url-pattern>/api/Korisnik</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AutenthicationRequieredOnPostAction</display-name>
    <filter-name>AutenthicationRequieredOnPostAction</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.AutenthicationRequieredOnPostAction</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AutenthicationRequieredOnPostAction</filter-name>
    <url-pattern>/api/Korisnik</url-pattern>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Projekcija</url-pattern>
    <url-pattern>/api/Karta</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AuthenticationRequieredOnPutAction</display-name>
    <filter-name>AuthenticationRequieredOnPutAction</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.AuthenticationRequieredOnPutAction</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AuthenticationRequieredOnPutAction</filter-name>
    <url-pattern>/api/Korisnik</url-pattern>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Projekcija</url-pattern>
    <url-pattern>/api/Karta</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AuthenticationRequieredOnDeleteAction</display-name>
    <filter-name>AuthenticationRequieredOnDeleteAction</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.AuthenticationRequieredOnDeleteAction</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AuthenticationRequieredOnDeleteAction</filter-name>
    <url-pattern>/api/Korisnik</url-pattern>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Projekcija</url-pattern>
    <url-pattern>/api/Karta</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AdminRoleRequieredOnGetActionFilter</display-name>
    <filter-name>AdminRoleRequieredOnGetActionFilter</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.adminRoleRequieredFilter.AdminRoleRequieredOnGetActionFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AdminRoleRequieredOnGetActionFilter</filter-name>
    <url-pattern>/AdminRoleRequieredOnGetActionFilter</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AdminRoleRequieredOnPostActionFilter</display-name>
    <filter-name>AdminRoleRequieredOnPostActionFilter</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.adminRoleRequieredFilter.AdminRoleRequieredOnPostActionFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AdminRoleRequieredOnPostActionFilter</filter-name>
    <url-pattern>/api/Korisnik</url-pattern>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Projekcija</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AdminRoleRequieredOnPutActionFilter</display-name>
    <filter-name>AdminRoleRequieredOnPutActionFilter</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.adminRoleRequieredFilter.AdminRoleRequieredOnPutActionFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AdminRoleRequieredOnPutActionFilter</filter-name>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Projekcija</url-pattern>
  </filter-mapping>
  <filter>
    <display-name>AdminRoleRequieredOnDeleteActionFilter</display-name>
    <filter-name>AdminRoleRequieredOnDeleteActionFilter</filter-name>
    <filter-class>controller.login.authentificationRequieredFilters.adminRoleRequieredFilter.AdminRoleRequieredOnDeleteActionFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>AdminRoleRequieredOnDeleteActionFilter</filter-name>
    <url-pattern>/api/Projekcija</url-pattern>
    <url-pattern>/api/Film</url-pattern>
    <url-pattern>/api/Karta</url-pattern>
    <url-pattern>/api/Korisnik</url-pattern>
  </filter-mapping>
  <listener>
    <listener-class>controller.InitListener</listener-class>
  </listener>
  <listener>
    <listener-class>controller.InitListener</listener-class>
  </listener>
  <servlet>
    <description></description>
    <display-name>RegisterServlet</display-name>
    <servlet-name>RegisterServlet</servlet-name>
    <servlet-class>controller.register.RegisterServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>RegisterServlet</servlet-name>
    <url-pattern>/api/Register</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>SuccessServlet</display-name>
    <servlet-name>SuccessServlet</servlet-name>
    <servlet-class>controller.status.SuccessServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SuccessServlet</servlet-name>
    <url-pattern>/Success</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>FailureServlet</display-name>
    <servlet-name>FailureServlet</servlet-name>
    <servlet-class>controller.status.FailureServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FailureServlet</servlet-name>
    <url-pattern>/Failure</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>UniqueUsernameServlet</display-name>
    <servlet-name>UniqueUsernameServlet</servlet-name>
    <servlet-class>controller.register.UniqueUsernameServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>UniqueUsernameServlet</servlet-name>
    <url-pattern>/api/UniqueUsername</url-pattern>
  </servlet-mapping>
  <servlet>
    <description>Servlet za slanje vise filmova</description>
    <display-name>FilmoviServlet</display-name>
    <servlet-name>FilmoviServlet</servlet-name>
    <servlet-class>controller.film.FilmoviServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FilmoviServlet</servlet-name>
    <url-pattern>/api/Filmovi</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>FilmServlet</display-name>
    <servlet-name>FilmServlet</servlet-name>
    <servlet-class>controller.film.FilmServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FilmServlet</servlet-name>
    <url-pattern>/api/Film</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>ZanroviServlet</display-name>
    <servlet-name>ZanroviServlet</servlet-name>
    <servlet-class>controller.miscellaneous.ZanroviServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ZanroviServlet</servlet-name>
    <url-pattern>/api/Zanrovi</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>FilmskiRadniciServlet</display-name>
    <servlet-name>FilmskiRadniciServlet</servlet-name>
    <servlet-class>controller.miscellaneous.FilmskiRadniciServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>FilmskiRadniciServlet</servlet-name>
    <url-pattern>/api/FilmskiRadnici</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>LoginServlet</display-name>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>controller.login.LoginServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/api/Login</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>LogoutServlet</display-name>
    <servlet-name>LogoutServlet</servlet-name>
    <servlet-class>controller.login.LogoutServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LogoutServlet</servlet-name>
    <url-pattern>/api/Logout</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>UnauthorizedServlet</display-name>
    <servlet-name>UnauthorizedServlet</servlet-name>
    <servlet-class>controller.status.UnauthorizedServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>UnauthorizedServlet</servlet-name>
    <url-pattern>/Unauthorized</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>KorisnikServlet</display-name>
    <servlet-name>KorisnikServlet</servlet-name>
    <servlet-class>controller.korisnik.KorisnikServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>KorisnikServlet</servlet-name>
    <url-pattern>/api/Korisnik</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>ProjekcijaServlet</display-name>
    <servlet-name>ProjekcijaServlet</servlet-name>
    <servlet-class>controller.projekcija.ProjekcijaServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ProjekcijaServlet</servlet-name>
    <url-pattern>/api/Projekcija</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>ZauzetaSedistaZaProjekcijuServlet</display-name>
    <servlet-name>ZauzetaSedistaZaProjekcijuServlet</servlet-name>
    <servlet-class>controller.projekcija.ZauzetaSedistaZaProjekcijuServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>ZauzetaSedistaZaProjekcijuServlet</servlet-name>
    <url-pattern>/api/ZauzetaSedistaZaProjekciju</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>KartaServlet</display-name>
    <servlet-name>KartaServlet</servlet-name>
    <servlet-class>controller.karta.KartaServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>KartaServlet</servlet-name>
    <url-pattern>/api/Karta</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>SalaServlet</display-name>
    <servlet-name>SalaServlet</servlet-name>
    <servlet-class>controller.sala.SalaServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>SalaServlet</servlet-name>
    <url-pattern>/api/Sala</url-pattern>
  </servlet-mapping>
  <servlet>
    <description></description>
    <display-name>TipProjekcijeServlet</display-name>
    <servlet-name>TipProjekcijeServlet</servlet-name>
    <servlet-class>controller.projekcija.TipProjekcijeServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>TipProjekcijeServlet</servlet-name>
    <url-pattern>/api/TipProjekcije</url-pattern>
  </servlet-mapping>
</web-app>